<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>uk.co.upco.mike</groupId>
 <packaging>war</packaging>
 <version>1.0-SNAPSHOT</version>
 <artifactId>maven-jruby-helloworld</artifactId>
 <name>Mike World App</name>
 <dependencies>
	<dependency>
		<groupId>uk.co.upco.mike</groupId>
		<artifactId>mike-common</artifactId>
		<version>1.0.6</version>
	</dependency>
 </dependencies>
 <build>
   <finalName>maven-jruby-helloworld</finalName>
   <plugins>
   <plugin>
     <groupId>org.codehaus.mojo</groupId>
     <artifactId>exec-maven-plugin</artifactId>
     <executions>
       <execution>
       <!-- This tasks only creates a basic structure expected by maven,  so it can do its work -->
         <id>create-mock-web-descriptor</id>
         <phase>compile</phase>
         <configuration>
           <executable>/bin/sh</executable>
           <workingDirectory>.</workingDirectory>
           <arguments>
             <argument>-c</argument>
             <argument>
               mkdir -p src/main/webapp/WEB-INF
               touch    src/main/webapp/WEB-INF/web.xml
             </argument>
           </arguments>
         </configuration>
         <goals>
           <goal>exec</goal>
         </goals>
       </execution>
       <execution>
       <!-- Now in the package phase we copy the jar files that maven put into the fake web app to our rails' lib folder -->
         <id>copy-needed-jars-into-lib</id>
         <phase>package</phase>
         <configuration>
           <executable>/bin/sh</executable>
           <workingDirectory>.</workingDirectory>
           <arguments>
             <argument>-c</argument>
             <argument>
               rm -f lib/*.jar
               cp target/railsApp/WEB-INF/lib/*.jar lib
               rm -rf target/railsApp*
               rm -rf src
             </argument>
           </arguments>
         </configuration>
         <goals>
           <goal>exec</goal>
         </goals>
       </execution>
       <execution>
       <!-- Here we optionally create the final war file containing our rails app using warbler, doing a small cleanup of the files  and folders maven created  -->
         <id>create-final-war</id>
         <phase>package</phase>
         <configuration>
           <executable>/bin/sh</executable>
           <workingDirectory>.</workingDirectory>
           <arguments>
             <argument>-c</argument>
             <argument>
                rm -rf *.war tmp/war
                warble
                mv *.war target/maven-jruby-helloworld.war
             </argument>
           </arguments>
         </configuration>
         <goals>
           <goal>exec</goal>
         </goals>
       </execution>
     </executions>
   </plugin>
  </plugins>
 </build>
</project>
